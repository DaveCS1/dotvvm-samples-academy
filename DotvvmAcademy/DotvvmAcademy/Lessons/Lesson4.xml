<?xml version="1.0" encoding="UTF-8"?>
<Lesson>
    <ValidatorsNamespace>DotvvmAcademy.Steps.Validation.Validators.Lesson4</ValidatorsNamespace>
    <Steps>
        <!--1-->
        <Step Type="Info">
            <Title>Introduction</Title>
            <Description>
                <![CDATA[
Purpose of this lesson is understanding validation.
                ]]>
            </Description>
        </Step>

        <!--2-->
        <Step Type="CsharpCode">
            <!--Required element-->
            <Title>Attribute `Required`</Title>
            <!--Required element-->
            <ValidationKey>Lesson4Step2Validator</ValidationKey>
            <!--Required element-->
            <Description>
                <![CDATA[
Add to ViewModel attributes `[Required]` and `[EmailAddress]`.
]]>
            </Description>
            <StartupCode>
                <![CDATA[
using System.ComponentModel.DataAnnotations;

namespace DotvvmAcademy.Tutorial.ViewModels 
{
    public class Lesson4ViewModel 
    {
        //add Required attribute
        public string City { get; set; }
        //add Required attribute
        public string ZIP { get; set; }
        //add EmailAddress attribute
        public string Email { get; set; }
    }
}
]]>
            </StartupCode>
            <!--Required element-->
            <FinalCode>
                <![CDATA[
using System.ComponentModel.DataAnnotations;

namespace DotvvmAcademy.Tutorial.ViewModels 
{
    public class Lesson4ViewModel 
    {
        [Required]
        public string City { get; set; }
        [Required]
        public string ZIP { get; set; }
        [EmailAddress]
        public string Email { get; set; }
    }
}
]]>
            </FinalCode>
            
              <AllowedTypesConstructed>
                <AllowedType>
                    <![CDATA[
System.ComponentModel.DataAnnotations.EmailAddressAttribute
                        ]]>
                </AllowedType>
                <AllowedType>
                    <![CDATA[
System.ComponentModel.DataAnnotations.RequiredAttribute
                        ]]>
                </AllowedType>
            </AllowedTypesConstructed>
             <AllowedMethodsCalled>
                <AllowedMethod>
                    <![CDATA[
System.ComponentModel.DataAnnotations.RequiredAttribute.IsValid
                        ]]>
                </AllowedMethod>
                <AllowedMethod>
                    <![CDATA[
System.ComponentModel.DataAnnotations.EmailAddressAttribute.IsValid
                        ]]>
                </AllowedMethod>
             </AllowedMethodsCalled>
        </Step>

        
         <!--3-->
        <Step Type="DothtmlCode">
        <!--Required element-->
            <Title>Add validation context</Title>
             <!--Required element-->
            <ValidationKey>Lesson4Step3Validator</ValidationKey>
            <Description>
                <![CDATA[
To the page add `Validation.Value` to the div`s and bind for current property.
                ]]>
            </Description>

            <StartupCode>
                <![CDATA[
<div> <!--bind div to Validator.Value for current property-->
    <dot:TextBox Text="{value: City}"/>
</div>
<div> <!--bind div to Validator.Value for current property-->
    <dot:TextBox Text="{value: ZIP}"/>
</div>
<div> <!--bind div to Validator.Value for current property-->
    <dot:TextBox Text="{value: Email}"/>
</div>
                ]]>
            </StartupCode>
            <!--Required element-->
            <FinalCode>
                <![CDATA[
<div Validator.Value="{value: City}">
    <dot:TextBox Text="{value: City}"/>
</div>
<div Validator.Value="{value: ZIP}">
    <dot:TextBox Text="{value: ZIP}"/>
</div>
<div Validator.Value="{value: Email}">
    <dot:TextBox Text="{value: Email}"/>
</div>
                ]]>
            </FinalCode>
        </Step>
         
        <!--4-->
        <Step Type="DothtmlCode">
        <!--Required element-->
            <Title>Add `Validation.InvalidCssClass`</Title>
             <!--Required element-->
            <ValidationKey>Lesson4Step4Validator</ValidationKey>
            <Description>
                <![CDATA[
Add to divs `Validation.InvalidCssClass="has-error"`. In case if is validation rule violated, add into element div class "has-error".
                ]]>
            </Description>

            <!--Required element-->
            <StartupCode>
                <![CDATA[
<div Validator.Value="{value: City}">
    <dot:TextBox Text="{value: City}"/>
</div>
<div Validator.Value="{value: ZIP}">
    <dot:TextBox Text="{value: ZIP}"/>
</div>
<div Validator.Value="{value: Email}">
    <dot:TextBox Text="{value: Email}"/>
</div>
                ]]>
            </StartupCode>
            <!--Required element-->
            <FinalCode>
                <![CDATA[
<div Validator.Value="{value: City}" Validator.InvalidCssClass="has-error">
    <dot:TextBox Text="{value: City}"/>
</div>
<div Validator.Value="{value: ZIP}" Validator.InvalidCssClass="has-error">
    <dot:TextBox Text="{value: ZIP}"/>
</div>
<div Validator.Value="{value: Email}" Validator.InvalidCssClass="has-error">
    <dot:TextBox Text="{value: Email}"/>
</div>
                ]]>
            </FinalCode>
            
        </Step>
        
        <!--5-->
        <Step Type="DothtmlCode">
        <!--Required element-->
            <Title>Set global `Validation.InvalidCssClass`</Title>
             <!--Required element-->
            <ValidationKey>Lesson4Step5Validator</ValidationKey>
            <Description>
                <![CDATA[
If you want set `Validator.InvalidCssClass` globally, you can simply add to parent element.  
                ]]>
            </Description>

            <!--Required element-->
            <StartupCode>
                <![CDATA[
<!--add div with Validator.InvalidCssClass-->                
    <div Validator.Value="{value: City}" Validator.InvalidCssClass="has-error"><!--remove redutant Validator.InvalidCssClass-->
        <dot:TextBox Text="{value: City}"/>
    </div>
    <div Validator.Value="{value: ZIP}" Validator.InvalidCssClass="has-error"><!--remove redutant Validator.InvalidCssClass-->
        <dot:TextBox Text="{value: ZIP}"/>
    </div>
    <div Validator.Value="{value: Email}" Validator.InvalidCssClass="has-error"><!--remove redutant Validator.InvalidCssClass-->
        <dot:TextBox Text="{value: Email}"/>
    </div>
<!--don`t forget close div element-->
                ]]>
            </StartupCode>
            <!--Required element-->
            <FinalCode>
                <![CDATA[
<div Validator.InvalidCssClass="has-error">
    <div Validator.Value="{value: City}">
        <dot:TextBox Text="{value: City}"/>
    </div>
    <div Validator.Value="{value: ZIP}">
        <dot:TextBox Text="{value: ZIP}"/>
    </div>
    <div Validator.Value="{value: Email}">
        <dot:TextBox Text="{value: Email}"/>
    </div>
</div>
                ]]>
            </FinalCode>
            
        </Step>
       
        <!--6-->
        <Step Type="Info">
            <!--Required element-->
            <Title>`Validator` control</Title>
             <!--Required element-->
            <Description>
                <![CDATA[
                
There are the `ShowErrorMessageText` and `SetToolTipText` properties. If they are set, the error message generated by the `[Required]` attribute will be displayed in the `Validator` control or set as a tool tip text.
                ]]>
            </Description>
            <!--Optional element-->
            <ShadowBoxDescription>
               <![CDATA[
To learn more, read the documentation about control `Validator` on [DotVVM Validator docs](https://www.dotvvm.com/docs/controls/builtin/Validator/latest). 
                ]]>
            </ShadowBoxDescription>
        </Step>
        
       
       
        <!--7-->
        <Step Type="DothtmlCode">
        <!--Required element-->
            <Title>Example of use `Validator`</Title>
             <!--Required element-->
            <ValidationKey>Lesson4Step7Validator</ValidationKey>
            <Description>
                <![CDATA[
XXXXXX
                ]]>
            </Description>
            <!--Optional element-->
            <!--Required element-->
            <StartupCode>
                <![CDATA[
<div Validator.InvalidCssClass="has-error">
    <div Validator.Value="{value: City}">
        <dot:TextBox Text="{value: City}"/>
    </div>
    <div Validator.Value="{value: ZIP}">
        <dot:TextBox Text="{value: ZIP}"/>
    </div>
    <div Validator.Value="{value: Email}">
        <dot:TextBox Text="{value: Email}"/>
    </div>
</div>
 <!--use Validator with ShowErrorMessageText on Email property-->
                ]]>
            </StartupCode>
            <!--Required element-->
            <FinalCode>
                <![CDATA[
<div Validator.InvalidCssClass="has-error">
    <div Validator.Value="{value: City}">
        <dot:TextBox Text="{value: City}"/>
    </div>
    <div Validator.Value="{value: ZIP}">
        <dot:TextBox Text="{value: ZIP}"/>
    </div>
    <div Validator.Value="{value: Email}">
        <dot:TextBox Text="{value: Email}"/>
    </div>
</div>
<dot:Validator Value="{value: Email}" ShowErrorMessageText="true"/>

                ]]>
            </FinalCode>
            
        </Step>
         


    </Steps>

</Lesson>